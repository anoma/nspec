module architecture-2.engines.basic-types;

import Stdlib.Prelude as Prelude;
import Stdlib.Data.Product as Product;

Nat : Type := Prelude.Nat;

Bool : Type := Prelude.Bool;

String : Type := Prelude.String;

Unit : Type := Prelude.Unit;

Pair (A B : Type) : Type := A Product.Ã— B;

List (A : Type) : Type := Prelude.List A;

ExternalID : Type := Nat;

InternalID : Type := Nat;

axiom Time : Type;

Identity : Type := Pair ExternalID InternalID;

Message : Type := Pair Type Prelude.String;

Mailbox : Type := List Message;

axiom Timer : Type;

axiom Trigger : Type; --TODO

axiom State : Type; -- This type is used to represent the system's state and defines the domain for an engine's state transition functions. Well, part of it.
