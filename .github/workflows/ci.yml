
name: anoma-spec-ci
'on':
  push:
    branches:
      - main
  schedule:
    - cron: 0 2 * * *

  workflow_dispatch:
    inputs:
      build-type:
        type: choice
        description: "Docs build type"
        default: "dev"
        options:
          - "dev"
          - "latest"

  pull_request:
    branches:
      - main
    types:
      - opened
      - reopened
      - synchronize
      - ready_for_review

env:
  CI: true
  GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  INSIDERS_TOKEN: ${{ secrets.INSIDERS_TOKEN }}
  SKIP: ${{ github.event.inputs.skip }}
  GIT_COMMITTER_EMAIL: arts@heliax.dev
  GIT_COMMITTER_NAME: Anoma Research

concurrency:
  group: "${{ github.workflow }}-${{ github.head_ref || github.run_id }}"
  cancel-in-progress: true

permissions:
  contents: write

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true
          fetch-depth: 0

      - name: Configure Git Credentials
        run: |
          git config --global user.name arts
          git config --global user.email arts@heliax.dev

      - name: Download latest nightly Juvix binary
        uses: jaxxstorm/action-install-gh-release@v1.9.0
        with:
          repo: anoma/juvix-nightly-builds
          cache: enable
          rename-to: juvix
          chmod: 0755

      - id: juvix-version
        name: See the dev version in the documentation
        run: |
          juvix --version

      - name: typecheck Juvix code
        run: |
          juvix typecheck docs/everything.juvix.md

      - uses: actions/setup-python@v4
        with:
          python-version: 3.x

      - run: echo "cache_id=$(date --utc '+%V')" >> $GITHUB_ENV
      - uses: actions/cache@v3
        with:
          key: mkdocs-material-${{ env.cache_id }}
          path: .cache
          restore-keys: |
            mkdocs-material-

      - name: Install Linux dependencies
        run: sudo apt-get install -y libcairo2-dev libfreetype6-dev libffi-dev libjpeg-dev libpng-dev libz-dev pngquant

      - run: pip install -r requirements.txt

      - name: Test building without material-insiders
        run: |
          mkdocs build --clean -v --config-file mkdocs.yml

      - run: |
          pip install git+https://${INSIDERS_TOKEN}@github.com/squidfunk/mkdocs-material-insiders.git

      - name: Test building with material-insiders
        run: mkdocs build --clean -v --config-file mkdocs.insiders.yml

      - name: Deploy documentation via GitHub (for releases)
        if: >-
          github.ref == 'refs/heads/main' && github.event_name == 'workflow_dispatch'
        run: |
          MKDOCSCONFIG=mkdocs.insiders.yml make ${{ github.event.inputs.build-type }}

      - name: By default, deploy DEV documentation via pushes to main
        if: >-
          github.ref == 'refs/heads/main' && github.event_name != 'workflow_dispatch'
        run: |
          MKDOCSCONFIG=mkdocs.insiders.yml make dev
