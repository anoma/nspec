
name: anoma-spec-ci
'on':
  push:
    branches:
      - main
  schedule:
    - cron: 0 2 * * *

  workflow_dispatch:
    inputs:
      build-type:
        type: choice
        description: "Docs build type"
        default: "dev"
        options:
          - "dev"
          - "latest"

  pull_request:
    branches:
      - main
    types:
      - opened
      - reopened
      - synchronize
      - ready_for_review

env:
  CI: true
  GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  INSIDERS_TOKEN: ${{ secrets.INSIDERS_TOKEN }}
  SKIP: ${{ github.event.inputs.skip }}
  GIT_COMMITTER_EMAIL: arts@heliax.dev
  GIT_COMMITTER_NAME: Anoma Research
  REMOVE_TODOS: true
  REPORT_TODOS: true
  REPORT_BROKEN_WIKILINKS: true
  PREPROCESS_JUVIX_MD: true
  DIFF_ENABLED: true
  REMOVE_CACHE: true
  USE_DOT: true

concurrency:
  group: "${{ github.workflow }}-${{ github.head_ref || github.run_id }}"
  cancel-in-progress: true

permissions:
  contents: write
  pull-requests: write
  repository-projects: write

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true
          fetch-depth: 0

      - name: Configure Git Credentials
        run: |
          git config --global user.name arts
          git config --global user.email arts@heliax.dev

      - name: Download latest nightly Juvix binary
        uses: jaxxstorm/action-install-gh-release@v1.9.0
        with:
          repo: anoma/juvix-nightly-builds
          cache: enable
          rename-to: juvix
          chmod: 0755

      - id: juvix-version
        name: See the dev version in the documentation
        run: |
          juvix --version

      - name: typecheck Juvix code
        run: |
          juvix typecheck docs/everything.juvix.md

      - uses: actions/setup-python@v4
        with:
          python-version: 3.x

      - run: echo "cache_id=$(date --utc '+%V')-${{ github.run_id }}" >> $GITHUB_ENV

      - uses: actions/cache@v3
        with:
          key: mkdocs-material-${{ env.cache_id }}
          path: .cache
          restore-keys: |
            mkdocs-material-

      - name: comment on PR
        if: >-
          github.event_name == 'pull_request'
        run: gh $GH_FLAGS --edit-last --body $MSG || gh $GH_FLAGS --body $MSG || true
        env:
          MSG: "Please wait. This comment will be updated with the build status or the preview link."
          GH_FLAGS: pr -R anoma/nspec comment ${{ github.event.pull_request.number }} 

      - name: Install Linux dependencies
        run: sudo apt-get install -y libcairo2-dev libfreetype6-dev libffi-dev libjpeg-dev libpng-dev libz-dev pngquant graphviz

      - name: Install Python dependencies
        run: pip install -r requirements.txt

      - name: Test building without material-insiders
        run: |
          mkdocs build --clean --config-file mkdocs.yml

      - name: comment on PR
        if: failure() && github.event_name == 'pull_request'
        run: |
          gh pr -R anoma/nspec comment ${{ github.event.pull_request.number }} --edit-last --body "The build failed. Please check the logs." || true

      - name: Install MkDocs Insiders
        run: |
          pip install git+https://${INSIDERS_TOKEN}@github.com/squidfunk/mkdocs-material-insiders.git

      - name: Test building with material-insiders
        run: mkdocs build --clean --config-file mkdocs.insiders.yml

      - name: comment on PR
        if: >-
          github.even_name == 'pull_request' && failure()
        run: |
          gh pr -R anoma/nspec comment ${{ github.event.pull_request.number }} --edit-last --body "The build failed with MkDocs Insiders. Please check the logs." || true

      - name: Deploying Preview
        id: deploy-preview
        if: >-
          github.event_name == 'pull_request'
        run: |
          gh pr -R anoma/nspec comment ${{ github.event.pull_request.number }} --edit-last --body "The preview of this PR is being built." || true

      - name: Set the version for mike
        id: deploy-preview-set-version
        if: >-
          github.event_name == 'pull_request'
        run: |
          DEVALIAS="pull-${{ github.event.pull_request.number }}" MKDOCSCONFIG=mkdocs.insiders.yml make dev

      - name: Remove versions starting with "pull"
        if: github.event_name == 'pull_request'
        shell: bash
        run: |
          git checkout gh-pages
          # remove versions starting with "pull"
          jq 'map(select(.version | startswith("pull") | not))' versions.json > temp.json && mv temp.json versions.json
          git add versions.json
          if git diff --staged --quiet; then
            echo "No changes to commit."
          else
            git commit -m "Remove versions starting with 'pull'"
            git push
          fi
          git checkout ${{ github.head_ref }}

      - name: Update PR comment if the last step failed
        if: >-
          github.event_name == 'pull_request' && failure()
        run: |
          gh pr -R anoma/nspec comment ${{ github.event.pull_request.number }} --edit-last --body "The preview of this PR failed to build. Please check the logs." || true

      - name: Report PR preview link
        if: >-
           github.event_name == 'pull_request' && success()
        run: gh pr -R anoma/nspec comment ${{ github.event.pull_request.number }} --edit-last --body "$MSG" || true
        env:
          MSG: "Success! The preview of this PR is available at https://anoma.github.io/nspec/pull-${{ github.event.pull_request.number }}/"

      - name: Delete the PR preview if the PR is closed or merged
        if: github.event_name == 'pull_request' && (github.event.pull_request.merged == true || github.event.action == 'closed')
        run: |
          DEVALIAS='pull-${{ github.event.pull_request.number }}' make delete-alias
          gh pr -R anoma/nspec comment ${{ github.event.pull_request.number }} --edit-last --body "The preview of this PR has been deleted." || true

      - name: Deploy documentation via GitHub (for releases)
        if: >-
          github.ref == 'refs/heads/main' && github.event_name == 'workflow_dispatch'
        run: |
          MKDOCSCONFIG=mkdocs.insiders.yml make ${{ github.event.inputs.build-type }}

      - name: By default, deploy DEV documentation via pushes to main
        if: >-
          github.ref == 'refs/heads/main' && github.event_name != 'workflow_dispatch'
        run: |
          MKDOCSCONFIG=mkdocs.insiders.yml make dev
